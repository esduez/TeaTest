name: Release Pipeline

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  GO_VERSION: '1.21'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binaries
        run: |
          mkdir -p release
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=$VERSION" -o release/teatest-linux
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=$VERSION" -o release/teatest-darwin
          GOOS=windows GOARCH=amd64 go build -ldflags "-X main.version=$VERSION" -o release/teatest-windows.exe

      - name: Prepare npm packages
        run: |
          mkdir -p npm-packages
          tar czf npm-packages/teatest-linux.tar.gz -C release teatest-linux
          tar czf npm-packages/teatest-darwin.tar.gz -C release teatest-darwin
          tar czf npm-packages/teatest-windows.tar.gz -C release teatest-windows.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-assets
          path: |
            release/*
            npm-packages/*

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-assets
          path: dist

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
